# Generated by Django 5.2.4 on 2025-07-14 15:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('farmer', 'Farmer'), ('supplier', 'Supplier'), ('buyer', 'Buyer')], default='buyer', max_length=20)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('address', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.region')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_name', models.CharField(max_length=100)),
                ('farm_type', models.CharField(choices=[('crop', 'Crop Farming'), ('livestock', 'Livestock'), ('mixed', 'Mixed Farming'), ('aquaculture', 'Aquaculture'), ('poultry', 'Poultry')], max_length=20)),
                ('farm_size', models.DecimalField(decimal_places=2, help_text='Size in acres', max_digits=10)),
                ('certifications', models.CharField(choices=[('organic', 'Organic'), ('fairtrade', 'Fair Trade'), ('gmp', 'Good Manufacturing Practice'), ('haccp', 'HACCP'), ('none', 'None')], default='none', max_length=20)),
                ('crops_grown', models.JSONField(blank=True, default=list)),
                ('livestock_types', models.JSONField(blank=True, default=list)),
                ('farming_experience', models.PositiveIntegerField(help_text='Years of experience')),
                ('seasonal_availability', models.JSONField(blank=True, default=dict)),
                ('delivery_radius', models.PositiveIntegerField(default=50, help_text='Delivery radius in km')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=100)),
                ('supplier_type', models.CharField(choices=[('seeds', 'Seeds'), ('fertilizers', 'Fertilizers'), ('tools', 'Tools & Equipment'), ('pesticides', 'Pesticides'), ('irrigation', 'Irrigation Systems'), ('packaging', 'Packaging Materials'), ('general', 'General Supplies')], max_length=20)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('tax_id', models.CharField(max_length=30, unique=True)),
                ('products_categories', models.JSONField(blank=True, default=list)),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('delivery_areas', models.JSONField(blank=True, default=list)),
                ('payment_terms', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('business_name', models.CharField(blank=True, max_length=100)),
                ('business_license', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField(blank=True)),
                ('social_media', models.JSONField(blank=True, default=dict)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('is_premium', models.BooleanField(default=False)),
                ('subscription_end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
